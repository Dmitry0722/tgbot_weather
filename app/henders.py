import types
import dp
from aiogram import F, Router
from aiogram.types import Message, CallbackQuery
from aiogram.filters import CommandStart, Command
from aiogram.types import InputMediaPhoto
import os
import app.keywords as kb
from aiogram.types import InputFile
from aiogram.fsm.state import State, StatesGroup
from aiogram.fsm.context import FSMContext
from app.apitg import get_weather_data

router = Router()


@router.message(CommandStart())
async def cmd_start(message: Message):
    await message.answer("–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ –±–æ—Ç, –≤ –∫–æ—Ç–æ—Ä–æ–º —Ç—ã –º–æ–∂–µ—à—å –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–æ–≥–æ–¥—É!", reply_markup=kb.main)

@router.message(F.text == '–û –Ω–∞—Å')
async def about_us(message: Message):
    await message.answer("–π–æ—É, —ç—Ç–æ –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–∂–µ—Ç –≤–∞–º –æ–¥–µ—Ç—å—Å—è –ø–æ –ø–æ–≥–æ–¥–µ –∏ –ø–æ–¥–Ω–∏–º–µ—Ç –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ! üê©‚òÇÔ∏è\n—Å–∫–æ—Ä–µ–µ –≤—ã–±–∏—Ä–∞–π —Å–≤–æ–π –≥–æ—Ä–æ–¥ –∏ –≤—ã—á–∏—Ç–∞–π –æ—Ç –≤–ª–∞–∂–Ω–æ—Å—Ç–∏ ~20%‚ùóÔ∏è")

@router.message(F.text == '–ü–æ–≥–æ–¥–∞')
async def gorod(message: Message):
    await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ä–æ–¥', reply_markup=kb.gorod)



from aiogram.types import FSInputFile  # –ò—Å–ø–æ–ª—å–∑—É–µ–º FSInputFile –≤–º–µ—Å—Ç–æ InputFile

@router.callback_query(F.data == 'Moscow')
async def moscow(callback: CallbackQuery):
    await callback.answer('–ó–∞–≥—Ä—É–∂–∞–µ–º –ø–æ–≥–æ–¥—É –¥–ª—è –ú–æ—Å–∫–≤—ã...')

    owm_data, wa_data = await get_weather_data("Moscow")

    if wa_data:
        media = await format_weather_message(owm_data, wa_data)
        if media:
            await callback.message.answer_media_group([media])
        else:
            await callback.message.answer("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ–≥–Ω–æ–∑")
    else:
        await callback.message.answer("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–≥–æ–¥–µ")

@router.callback_query(F.data == 'Chelyabinsk')
async def chelyabinsk(callback: CallbackQuery):
    await callback.answer('–ó–∞–≥—Ä—É–∂–∞–µ–º –ø–æ–≥–æ–¥—É –¥–ª—è –ß–µ–ª—è–±–∏–Ω—Å–∫–∞...')

    owm_data, wa_data = await get_weather_data("Chelyabinsk")

    if wa_data:
        media = await format_weather_message(owm_data, wa_data)
        if media:
            await callback.message.answer_media_group([media])
        else:
            await callback.message.answer("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ–≥–Ω–æ–∑")
    else:
        await callback.message.answer("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–≥–æ–¥–µ")

@router.callback_query(F.data == 'Tyumen')
async def tyumen(callback: CallbackQuery):
    await callback.answer('–ó–∞–≥—Ä—É–∂–∞–µ–º –ø–æ–≥–æ–¥—É –¥–ª—è –¢—é–º–µ–Ω–∏...')


    owm_data, wa_data = await get_weather_data("Tyumen")

    if wa_data:
        media = await format_weather_message(owm_data, wa_data)
        if media:
            await callback.message.answer_media_group([media])
        else:
            await callback.message.answer("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ–≥–Ω–æ–∑")
    else:
        await callback.message.answer("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–≥–æ–¥–µ")

@router.callback_query(F.data == 'Zlatoust')
async def zlatoust(callback: CallbackQuery):
    await callback.answer('–ó–∞–≥—Ä—É–∂–∞–µ–º –ø–æ–≥–æ–¥—É –¥–ª—è –ó–ª–∞—Ç–æ—É—Å—Ç–∞...')

    owm_data, wa_data = await get_weather_data("Zlatoust")

    if wa_data:
        media = await format_weather_message(owm_data, wa_data)
        if media:
            await callback.message.answer_media_group([media])
        else:
            await callback.message.answer("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ–≥–Ω–æ–∑")
    else:
        await callback.message.answer("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–≥–æ–¥–µ")



@router.callback_query(F.data == 'Kostroma')
async def kostroma(callback: CallbackQuery):
    await callback.answer('–ó–∞–≥—Ä—É–∂–∞–µ–º –ø–æ–≥–æ–¥—É –¥–ª—è –ö–æ—Å—Ç—Ä–æ–º—ã...')

    owm_data, wa_data = await get_weather_data("Kostroma")

    if wa_data:
        media = await format_weather_message(owm_data, wa_data)
        if media:
            await callback.message.answer_media_group([media])
        else:
            await callback.message.answer("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ–≥–Ω–æ–∑")
    else:
        await callback.message.answer("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–≥–æ–¥–µ")



@router.callback_query(F.data == 'Kirov')
async def kirov(callback: CallbackQuery):
    await callback.answer('–ó–∞–≥—Ä—É–∂–∞–µ–º –ø–æ–≥–æ–¥—É –¥–ª—è –ö–∏—Ä–æ–≤...')

    owm_data, wa_data = await get_weather_data("Kirov")

    if wa_data:
        media = await format_weather_message(owm_data, wa_data)
        if media:
            await callback.message.answer_media_group([media])
        else:
            await callback.message.answer("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ–≥–Ω–æ–∑")
    else:
        await callback.message.answer("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–≥–æ–¥–µ")


@router.callback_query(F.data == 'Kaliningrad')
async def kaliningrad(callback: CallbackQuery):
    await callback.answer('–ó–∞–≥—Ä—É–∂–∞–µ–º –ø–æ–≥–æ–¥—É –¥–ª—è –ö–∞–ª–∏–Ω–∏–Ω–≥—Ä–∞–¥...')

    owm_data, wa_data = await get_weather_data("Kaliningrad")

    if wa_data:
        media = await format_weather_message(owm_data, wa_data)
        if media:
            await callback.message.answer_media_group([media])
        else:
            await callback.message.answer("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ–≥–Ω–æ–∑")
    else:
        await callback.message.answer("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–≥–æ–¥–µ")

@router.callback_query(F.data == 'Ekaterinburg')
async def ekaterinburg(callback: CallbackQuery):
    await callback.answer('–ó–∞–≥—Ä—É–∂–∞–µ–º –ø–æ–≥–æ–¥—É –¥–ª—è –ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥–∞...')

    owm_data, wa_data = await get_weather_data("Ekaterinburg")

    if wa_data:
        media = await format_weather_message(owm_data, wa_data)
        if media:
            await callback.message.answer_media_group([media])
        else:
            await callback.message.answer("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ–≥–Ω–æ–∑")
    else:
        await callback.message.answer("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–≥–æ–¥–µ")

@router.callback_query(F.data == 'Korenovsk')
async def korenovsk(callback: CallbackQuery):
    await callback.answer('–ó–∞–≥—Ä—É–∂–∞–µ–º –ø–æ–≥–æ–¥—É –¥–ª—è –ö–æ—Ä–µ–Ω–æ–≤—Å–∫–∞...')

    owm_data, wa_data = await get_weather_data("Korenovsk")

    if wa_data:
        media = await format_weather_message(owm_data, wa_data)
        if media:
            await callback.message.answer_media_group([media])
        else:
            await callback.message.answer("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ–≥–Ω–æ–∑")
    else:
        await callback.message.answer("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–≥–æ–¥–µ")

@router.callback_query(F.data == 'Ufa')
async def ufa(callback: CallbackQuery):
    await callback.answer('–ó–∞–≥—Ä—É–∂–∞–µ–º –ø–æ–≥–æ–¥—É –¥–ª—è –£—Ñ—ã...')

    owm_data, wa_data = await get_weather_data("Ufa")

    if wa_data:
        media = await format_weather_message(owm_data, wa_data)
        if media:
            await callback.message.answer_media_group([media])
        else:
            await callback.message.answer("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ–≥–Ω–æ–∑")
    else:
        await callback.message.answer("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–≥–æ–¥–µ")
@router.callback_query(F.data == 'Kurgan')
async def kurgan(callback: CallbackQuery):
    await callback.answer('–ó–∞–≥—Ä—É–∂–∞–µ–º –ø–æ–≥–æ–¥—É –¥–ª—è –ö—É—Ä–≥–∞–Ω–∞...')

    owm_data, wa_data = await get_weather_data("Kurgan")

    if wa_data:
        media = await format_weather_message(owm_data, wa_data)
        if media:
            await callback.message.answer_media_group([media])
        else:
            await callback.message.answer("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ–≥–Ω–æ–∑")
    else:
        await callback.message.answer("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–≥–æ–¥–µ")

@router.callback_query(F.data == 'Kemerovo')
async def kemerovo(callback: CallbackQuery):
    await callback.answer('–ó–∞–≥—Ä—É–∂–∞–µ–º –ø–æ–≥–æ–¥—É –¥–ª—è –ö–µ–º–µ—Ä–æ–≤–æ...')

    owm_data, wa_data = await get_weather_data("Kemerovo")

    if wa_data:
        media = await format_weather_message(owm_data, wa_data)
        if media:
            await callback.message.answer_media_group([media])
        else:
            await callback.message.answer("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ–≥–Ω–æ–∑")
    else:
        await callback.message.answer("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–≥–æ–¥–µ")

@router.callback_query(F.data == 'Kazan')
async def kazan(callback: CallbackQuery):
    await callback.answer('–ó–∞–≥—Ä—É–∂–∞–µ–º –ø–æ–≥–æ–¥—É –¥–ª—è –ö–∞–∑–∞–Ω–∏...')

    owm_data, wa_data = await get_weather_data("Kazan")

    if wa_data:
        media = await format_weather_message(owm_data, wa_data)
        if media:
            await callback.message.answer_media_group([media])
        else:
            await callback.message.answer("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ–≥–Ω–æ–∑")
    else:
        await callback.message.answer("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–≥–æ–¥–µ")


async def format_weather_message(owm_data: dict, wa_data: dict) -> tuple:
    try:
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        city = wa_data.get('location', {}).get('name', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –≥–æ—Ä–æ–¥')

        details_owm = [
            "–ü—Ä–æ–≥–Ω–æ–∑ c openweathermap:",
            f"üåè–ü–æ–≥–æ–¥–∞: {owm_data['weather'][0]['description']}",
            f"üíß–í–ª–∞–∂–Ω–æ—Å—Ç—å: {owm_data['main']['humidity']}%",
            f"üå°–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {owm_data['main']['temp']}‚ÑÉ\n–û—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫: {owm_data['main']['feels_like']}‚ÑÉ",
            f"üí®–°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞: {owm_data['wind']['speed']}–º/—Å\n",
        ]

        details_wa = [
            "–ü—Ä–æ–≥–Ω–æ–∑ c Weatherapi:",
            f"üåè–ü–æ–≥–æ–¥–∞: {wa_data['current']['condition']['text']}",
            f"üíß–í–ª–∞–∂–Ω–æ—Å—Ç—å: {wa_data['current']['humidity']}%",
            f"üå°–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {wa_data['current']['temp_c']}‚ÑÉ\n–û—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫: {wa_data['current']['feelslike_c']}‚ÑÉ",
            f"üí®–°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞: {wa_data['current']['wind_kph'] * 1000 / 3600:.1f}–º/—Å\n",
        ]

        message = "\n".join([
            f"üå¶ –ü–æ–≥–æ–¥–∞ –≤ {city}",
            *details_owm, *details_wa,
            f"\n–û–±–Ω–æ–≤–ª–µ–Ω–æ: {wa_data.get('current', {}).get('last_updated', '')}"
        ])

        # –°–æ–∑–¥–∞–µ–º –º–µ–¥–∏–∞ –æ–±—ä–µ–∫—Ç —Å —Ñ–æ—Ç–æ
        photo_path = r"C:\Users\annae\Desktop\—Ñ–æ—Ç–æ –ø–æ–≥–æ–¥—ã\–∞–∞–∞–∞–∞.jpg"
        media = InputMediaPhoto(
            media=FSInputFile(photo_path),
            caption=message
        )

        if  wa_data['current']['condition']['text'] == "Sunny":
            photo_path = r"C:\Users\annae\Desktop\—Ñ–æ—Ç–æ –ø–æ–≥–æ–¥—ã\–≥–∞–∏—Ç–∏.jpg"
            media = InputMediaPhoto(
                media=FSInputFile(photo_path),
                caption=message
            )

        if  wa_data['current']['condition']['text'] == "Clear":
            photo_path = r"C:\Users\annae\Desktop\—Ñ–æ—Ç–æ –ø–æ–≥–æ–¥—ã\—è—Å–Ω–æ-–ø–æ–Ω—è—Ç–Ω–æ.jpg"
            media = InputMediaPhoto(
                media=FSInputFile(photo_path),
                caption=message
            )

        if owm_data['main']['humidity'] >= 80 and owm_data['main']['temp'] <= 2:
            photo_path = r"C:\Users\annae\Desktop\—Ñ–æ—Ç–æ –ø–æ–≥–æ–¥—ã\—Å–º–æ–≥.jpg"
            media = InputMediaPhoto(
                media=FSInputFile(photo_path),
                caption=message
            )

        if owm_data['main']['temp'] <= -15:
            photo_path = r"C:\Users\annae\Desktop\—Ñ–æ—Ç–æ –ø–æ–≥–æ–¥—ã\—à–∞—à–ª—ã–∫–∏.jpg"
            media = InputMediaPhoto(
                media=FSInputFile(photo_path),
                caption=message
            )

        if owm_data['main']['temp'] >= -4 and owm_data['main']['temp'] <= -2:
            photo_path = r"C:\Users\annae\Desktop\—Ñ–æ—Ç–æ –ø–æ–≥–æ–¥—ã\–º—ç—Ä–∏-–ø–æ–ø–∏–Ω—Å.jpg"
            media = InputMediaPhoto(
                media=FSInputFile(photo_path),
                caption=message
            )

        if owm_data['main']['temp'] >= 15 and wa_data['current']['condition']['text'] == "Clear":
            photo_path = r"C:\Users\annae\Desktop\—Ñ–æ—Ç–æ –ø–æ–≥–æ–¥—ã\–ø–∏–≤–æ.jpg"
            media = InputMediaPhoto(
                media=FSInputFile(photo_path),
                caption=message
            )

        if (city == "Zlatoust" or city == "Tyumen" or city == "Ekaterinburg" or city == "Chelyabinsk" ) and owm_data['weather'][0]['description'] == "Sunny" and owm_data['main']['temp'] >= 20:
            photo_path = r"C:\Users\annae\Desktop\—Ñ–æ—Ç–æ –ø–æ–≥–æ–¥—ã\–æ—Å–µ–ª.jpg"
            media = InputMediaPhoto(
                media=FSInputFile(photo_path),
                caption=message
            )

        if owm_data['main']['temp'] >= 10 and owm_data['main']['temp'] < 15:
            photo_path = r"C:\Users\annae\Desktop\—Ñ–æ—Ç–æ –ø–æ–≥–æ–¥—ã\–ª–µ–∂–∞–∫.jpg"
            media = InputMediaPhoto(
                media=FSInputFile(photo_path),
                caption=message
            )

        if owm_data['main']['humidity'] == 100:
            photo_path = r"C:\Users\annae\Desktop\—Ñ–æ—Ç–æ –ø–æ–≥–æ–¥—ã\–∫–æ—Ä–æ–≤–∞.jpg"
            media = InputMediaPhoto(
                media=FSInputFile(photo_path),
                caption=message
            )

        if owm_data['wind']['speed'] >= 10:
            photo_path = r"C:\Users\annae\Desktop\—Ñ–æ—Ç–æ –ø–æ–≥–æ–¥—ã\—É—Ä–∞–≥–∞–Ω.jpg"
            media = InputMediaPhoto(
                media=FSInputFile(photo_path),
                caption=message
            )






        return media


    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
        return None